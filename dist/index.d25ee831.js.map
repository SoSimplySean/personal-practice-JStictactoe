{"mappings":"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","sources":["index.js"],"sourcesContent":["const gameBoard = (function () {\n  let _state = [\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n  ];\n\n  function getState() {\n    return _state;\n  }\n\n  function addField(fieldX, fieldY, option) {\n    _state[fieldX][fieldY] = option;\n  }\n\n  function restartGame() {\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        _state[i][j] = \"\";\n      }\n    }\n  }\n\n  return { getState, addField, restartGame };\n})();\n\nconst gameController = (function () {\n  let _turn = \"O\";\n\n  function getTurn() {\n    return _turn;\n  }\n\n  function changeTurn() {\n    if (_turn === \"O\") {\n      _turn = \"X\";\n    } else {\n      _turn = \"O\";\n    }\n  }\n\n  function checkWin() {\n    const state = gameBoard.getState();\n\n    // Horizontal & Vertical\n    for (let i = 0; i < 3; i++) {\n      if (\n        state[i][0] === state[i][1] &&\n        state[i][1] === state[i][2] &&\n        state[i][0] !== \"\"\n      ) {\n        return state[i][0];\n      }\n\n      if (\n        state[0][i] === state[1][i] &&\n        state[1][i] === state[2][i] &&\n        state[0][i] !== \"\"\n      ) {\n        return state[0][i];\n      }\n    }\n\n    // Diagonal\n    if (\n      state[0][0] === state[1][1] &&\n      state[1][1] === state[2][2] &&\n      state[0][0] !== \"\"\n    ) {\n      return state[0][0];\n    }\n\n    if (\n      state[0][2] === state[1][1] &&\n      state[1][1] === state[2][0] &&\n      state[0][2] !== \"\"\n    ) {\n      return state[0][2];\n    }\n\n    return undefined;\n  }\n\n  function restartGame() {\n    _turn = \"O\";\n  }\n\n  return { getTurn, changeTurn, checkWin, restartGame };\n})();\n\nconst displayController = (function () {\n  const _board = document.querySelectorAll(`.game__field`);\n  const _message = document.querySelector(`.message`);\n  const _restart = document.querySelector(`.restart`);\n\n  _board.forEach((box) => {\n    box.addEventListener(`click`, _boxClick);\n  });\n\n  _restart.addEventListener(`click`, _restartGame);\n\n  function _boxClick() {\n    if (this.innerHTML) {\n      return;\n    }\n\n    if (gameController.getTurn() === \"O\") {\n      this.innerHTML = \"O\";\n      gameBoard.addField(\n        Math.floor(this.dataset.index / 3),\n        this.dataset.index % 3,\n        \"O\"\n      );\n    } else {\n      this.innerHTML = \"X\";\n      gameBoard.addField(\n        Math.floor(this.dataset.index / 3),\n        this.dataset.index % 3,\n        \"X\"\n      );\n    }\n\n    if (gameController.checkWin()) {\n      _messageWin(gameController.checkWin());\n    } else {\n      gameController.changeTurn();\n      _messageChange(gameController.getTurn());\n    }\n  }\n\n  function _messageWin(winner) {\n    _message.innerHTML = `PLAYER ${winner} WINS ðŸ™Œ`;\n  }\n\n  function _messageChange(turn) {\n    _message.innerHTML = `Player ${turn}'s turn`;\n  }\n\n  function _restartGame() {\n    _board.forEach((box) => (box.innerHTML = \"\"));\n    gameController.restartGame();\n    gameBoard.restartGame();\n    _messageChange(gameController.getTurn());\n  }\n\n  return {};\n})();\n"],"names":[],"version":3,"file":"index.d25ee831.js.map","sourceRoot":"/__parcel_source_root/"}